
@{
    ViewData["Title"] = "Tienda Pedalea";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="card mb-3" style="margin-top:57px;">

    <div class="card-header">
        <i class="fa fa-table"></i> @ViewData["Title"] &emsp;
                <button type="button" class="btn btn-success btn-xs align-items-xl-end" onclick="GetModalCrear('${response.model[i].personaID}')">
                    <i class="fa fa-pencil-square"></i>&nbsp;Nuevo&nbsp;&nbsp;
                </button>
    </div>

    <div class="card-body">
        <div class="container">
            <div style="width:100%; margin:0 auto;">

                <table id="tableDinamica" class="table table-striped table-bordered table-hover dt-responsive nowrap display compact" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th style="text-align:center">Editar</th>
                            <th style="text-align:center">ID</th>
                            <th style="text-align:center">Cliente</th>
                            <th style="text-align:center">Vendedor</th>
                            <th style="text-align:center">Tipo Doc</th>
                            <th style="text-align:center">Total</th>
                            <th style="text-align:center">Direccion</th>
                            <th style="text-align:center">Fecha</th>
                            <th style="text-align:center">Acción</th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>
    <!-- =================================================== RefresTokenModal ============================================================  -->

 <div class="modal fade bd-example-modal-xl" tabindex="-1" id="modalCrear" role="dialog">
  <div class="modal-dialog modal-xl">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Tienda</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>

    <div class="modal-body ">
         <div class="card mb-3">
            <div class="card-body">
                <div class="row col-md-12" >
                <input type="text" class="form-control" id="PersonaID" hidden >
                <div class="row col-md-12" style="padding:2px">
                    <div class="col-md-3">
                <label for="Identificacion" class="col-form-label"><span style="color:red">*</span>Identificacion:</label>
                <input type="text" class="form-control" id="Identificacion">         
                </div>
                <div class="col-md-3">
                <label for="PrimerNombre" class="col-form-label">Primer Nombre:</label>
                <input class="form-control" id="PrimerNombre" placeholder="Opcional">
                </div>
                <div class="col-md-3">
                <label for="SegundoNombre" class="col-form-label">Segundo Nombre:</label>
                <input class="form-control" id="SegundoNombre" placeholder="Opcional">
                </div> 
                <div class="col-md-3">
                <label for="PrimerApellido" class="col-form-label">Primer Apellido:</label>
                <input class="form-control" id="PrimerApellido" placeholder="Opcional">
                </div>         
                <div class="col-md-3">
                <label for="SegundoApellido" class="col-form-label">Segundo Apellido:</label>
                <input class="form-control" id="SegundoApellido" placeholder="Opcional">
                </div> 
                <div class="col-md-3">
                <label for="Direccion" class="col-form-label"><span style="color:red">*</span> Direccion Entrega:</label>
                <input class="form-control" id="Direccion">
                </div>  
                <div class="col-md-3">
                <label for="EsCliente" class="col-form-label">Es Cliente:</label>
                <input type="checkbox" class="form-check checkbox" id="EsCliente">
                </div>   
                <div class="col-md-3">
                <label for="EsProveedor" class="col-form-label">Es Proveedor:</label>
                <input type="checkbox" class="form-check checkbox" id="EsProveedor">
                </div>
            </div>
                <br />    
                <hr />
                <div class="row col-md-12" style="padding:2px">
                    <div class="col-md-3">
                        <label for="ProductoID" class="col-form-label"><span style="color:red">*</span>Producto ID:</label>
                        <select class="form-select" id="ProductoID"></select>
                    </div>
                    <div class="col-md-2">
                        <label for="Cantidad" class="col-form-label"><span style="color:red">*</span>Cantidad:</label>
                        <input type="text" class="form-control" value="1" id="Cantidad" onkeyup="return miles(this.id)">
                    </div>
                    <div class="col-md-2">
                        <label for="ValorUnitario" class="col-form-label"><span style="color:red">*</span>Valor:</label>
                        <input type="text" class="form-control"value="0" id="ValorUnitario" onkeyup="return miles(this.id)">
                    </div>
                    <div class="col-md-2">
                        <label for="PorcentajeDescuento" class="col-form-label">Descuento:</label>
                        <input type="text" class="form-control" value="0" id="PorcentajeDescuento" onkeyup="return miles(this.id)">
                    </div>
                    <div class="col-md-2">
                        <label for="Color" class="col-form-label">Color:</label>
                        <input type="text" class="form-control" id="Color" readonly>
                    </div> 
                    <div class="col-md-1">
                        <label for="Talla" class="col-form-label">Talla:</label>
                        <input type="text" class="form-control" id="Talla" readonly>
                    </div>
                    <div class="col-md-2">
                        <br />
                        <button type="button" class="btn btn-primary" id="btnAddArray" onclick="AddArray()"><i class="fa fa-cart-plus" aria-hidden="true"></i> Agregar</button>
                    </div>
            </div>
            <hr />
            <div class="row col-md-12" id="table" style="padding:2px">
                <div class="container">
                    <div style="width:100%; margin:0 auto;">
                        <table id="tableArray" class="table table-striped table-bordered table-hover dt-responsive nowrap display compact" width="100%" cellspacing="0">
                            <thead>
                                <tr>
                                    <th style="text-align:center">ID</th>
                                    <th style="text-align:center">Producto</th>
                                    <th style="text-align:center">Valor Unitario $</th>
                                    <th style="text-align:center">Cantidad</th>
                                    <th style="text-align:center">Descuento %</th>
                                    <th style="text-align:center">Neto $</th>
                                    <th style="text-align:center">Acción</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
            </div>
            </div>
        </div>
    </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Salir</button>
        <button type="button" class="btn btn-primary" id="btnCrear">Guardar</button>
      </div>
    </div>
  </div>
</div>
<script>
    var Pedidos = [];
    var DocumentoID = 0;
    var ProductoID = 0;
    var update = false;
    var ValorTotal = 0;
    $(document).ready(function () {
       // $("#ProductoID").select2();
        GetDocumento();
        SelectLisProductos();
    })

    function GetModalCrear() 
    {
        $("#modalCrear").modal("show")
    }

    $("#btnCrear").click(function () {
          DocumentoID = parseInt($("#DocumentoID").val());

         if (DocumentoID > 0) { } else {DocumentoID=0 }

         var TipoDocumentoID = $("#TipoDocumentoID").val();
         var PersonaIDCliente = $("#PersonaIDCliente").val();
            if (PersonaIDCliente > 0) { } else {PersonaIDCliente=0 }

         var PersonaIDVendedor = $("#PersonaIDVendedor").val();
         if (PersonaIDVendedor > 0) { } else {PersonaIDVendedor=0 }

         var PrimerNombre = $("#PrimerNombre").val();
         var SegundoNombre = $("#SegundoNombre").val();
         var PrimerApellido = $("#PrimerApellido").val();
         var SegundoApellido = $("#SegundoApellido").val();
         var Identificacion = $("#Identificacion").val();
         var EsCliente =  $("#EsCliente").prop("checked");
         var EsProveedor =  $("#EsProveedor").prop("checked");

        var data = {
            DocumentoID: DocumentoID, //Solo si se actualiza el documento
            ValorTotal: ValorTotal,// lo ideal es racalcular en el server por seguridad
            TipoDocumentoID: 2,// 2 es venta o salida de inventario
            PersonaIDCliente: PersonaIDCliente,
            PersonaIDVendedor: PersonaIDVendedor,// para otra ocacion (este seria el id de usuario)
            PrimerNombre: PrimerNombre,
            SegundoNombre: SegundoNombre,
            PrimerApellido: PrimerApellido,
            SegundoApellido: SegundoApellido,
            Identificacion: Identificacion,
            Direccion: $("#Direccion").val(),
            EsCliente:EsCliente,
            EsProveedor: EsProveedor,
            LisPedidos:Pedidos//array // lo ideal es que los valores se rectifiquen en el server segun parametros ...descuento maximo etc..
        }
        debugger
        
        var value = JSON.stringify(data);
        if (update == false) {
            $.ajax({
                url: '/api/PedaleaAPI/CrearPersonas',
                'type': 'POST',
                data: value,
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                traditional: true,
                async: true,
                dataType: "JSON",
                success: function (response) {
                    
                    if (response.responseClient.success) {
                        toastr.success(response.responseClient.mensaje);
                    } else {
                        toastr.warning(response.responseClient.mensaje);
                    }
                },
                complete: function () {
                    GetDocumento();
                },
                error: function (data) {
                   toastr.error("No pudimos completar tu solicitud!");
                }
            });
        }
        else if (DocumentoID != "" && DocumentoID != undefined && DocumentoID != NaN) { 
            
        }
        else {
            toastr.warning("selecciona una accion!");
        }
    });

    function GetDocumento() {
        $.ajax({
            url: '/api/PedaleaAPI/GetDocumentos',
            method: 'GET',
            data: {},
            traditional: true,
            async: true,
            dataType: 'JSON',
            success: function (response) {
                $('#tableDinamica').DataTable().clear();
                $('#tableDinamica').DataTable().destroy();
                $('#tableDinamica').find('tbody').empty();
                if (response.responseClient.success==true) {
                    for (var i = 0; i < response.model.length; i++) {
                        $('#tableDinamica').find('tbody').append(
                            `<tr id="">
                                <td align="right">
                                    <button type="button" class="btn btn-success btn-xs" onclick="GetModalCrear('${response.model[i].documentoID}')">
                                        <i class="fa fa-pencil-square"></i>&nbsp;Editar&nbsp;&nbsp;
                                    </button>
                                </td>
                                <td align="right">${ response.model[i].documentoID}</td>
                                <td align="right">${ response.model[i].personaIDCliente }</td>
                                <td align="right">${ response.model[i].personaIDVendedor}</td>
                                <td align="right">${ response.model[i].tipoDocumentoID}</td>
                                <td align="right">${ response.model[i].valorTotal}</td>
                                <td align="right">${ response.model[i].direccion}</td>
                                <td align="right">${ response.model[i].fechaCreacion}</td>
                                <td align="right">
                                    <button type="button" class="btn btn-warning btn-xs" onclick="BorrarDocumento('${response.model[i].documentoID}')">
                                        <i class="fa fa-trash"></i>&nbsp;Borrar&nbsp;&nbsp;
                                    </button>
                                </td>
                            </tr >`);
                    }
                } else {
                    toastr.error(response.mensaje, "Error");
                };
            },
            error: function (jQXHR) {
                toastr.error('No pudimos procesar su Solicitud!')
            },
            complete: function () {
                $('#tableDinamica').DataTable({
                    dom: "<''<'col-md-6'l><'col-md-6'f>>t<'col-md-4'i><'col-md-8 text-right'pB>",
                    "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
                    buttons: []
                });
            }
        });
    }

    function BorrarDocumento(documentoID) 
    { 
        if (documentoID>0) {
            $.ajax({
                url: `/api/PedaleaAPI/BorrarDocumento?DocumentoID=${documentoID}`,
                type: 'DELETE',
                async:true,
                success: function (response) {                  
                    if (response.responseClient.success) {
                        toastr.success(response.responseClient.mensaje);
                    } else {
                        toastr.warning(response.responseClient.mensaje);
                    }
                },
                complete: function () {
                    GetDocumento();
                },
                error: function (data) {
                    toastr.error("No pudimos completar tu solicitud!");
                }
            });
        }
    }

    $("#ProductoID").keyup(function(e) {
        
        var ProductoID = $("#ProductoID").val();
        if (ProductoID!=null && ProductoID!=undefined && ProductoID!="") 
        {
            SelectLisProductos();
        }      
    });  
    
    $("#ProductoID").change(function(e) {
        
        var ProductoID = $("#ProductoID").val();
        if (ProductoID!=null && ProductoID!=undefined && ProductoID!="") 
        {
            SelectLisProductosById();
        }      
    });

    function SelectLisProductos() {
        var ProductoID = $("#ProductoID").val();
        if (ProductoID==null || ProductoID==undefined) {ProductoID="0" }
        
        $.ajax({
            url: `/api/PedaleaAPI/GetProductoByName?name=${ProductoID}`,
            method: 'get',
            traditional: true,
            async: true,
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            headers: {
                'Authorization': 'Bearer '
                    + localStorage.getItem("accessToken")
            },
            success: function (response) {
                $('#ProductoID').empty();
                              
                if (response.responseClient.success==true) {
                    if (response.model.length>0) {
                         $(response.model).each(function (i) 
                         {
                            $('#ProductoID').append(new Option(response.model[i].producto, response.model[i].productoID));
                        });
                    }
                } else {
                    toastr.warning(response.responseClient.mensaje);
                }
            },
            error: function (data) {
                toastr.error("No pudimos completar tu solicitud!");
            }
        });
    }

    function SelectLisProductosById() {
        var ProductoID = $("#ProductoID").val();
        var name = "0";
        if (ProductoID==null || ProductoID==undefined|| ProductoID=="") {ProductoID=0 }
        ProductoID = parseInt(ProductoID);
        
        $.ajax({
            url: `/api/PedaleaAPI/GetProductoByName?name=${name}&ProductoID=${ProductoID}`,
            method: 'get',
            traditional: true,
            async: true,
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            headers: {
                'Authorization': 'Bearer '
                    + localStorage.getItem("accessToken")
            },
            success: function (response) {
                               
                if (response.responseClient.success==true) {
                    if (response.model.length>0) {
                         $(response.model).each(function (i) {
                             $('#ValorUnitario').val(addCommas(response.model[i].valor));
                             $('#Color').val(response.model[i].color);
                             $('#Talla').val(response.model[i].talla);
                    });
                    }
                } else {
                    toastr.warning(response.responseClient.mensaje);
                }
            },
            error: function (data) {
                toastr.error("No pudimos completar tu solicitud!");
            }
        });
    }

    function AddArray() {
        
        var ProductoID = $("#ProductoID").val();
        var ProductoTex = $("#ProductoID option:selected").text();
        var ValorUnitario = parseFloat(quitCommas($("#ValorUnitario").val()));
        var Cantidad = parseFloat(quitCommas($("#Cantidad").val()));
        var PorcentajeDescuento = parseFloat(quitCommas($("#PorcentajeDescuento").val()));
        var Neto = ((Cantidad)*(ValorUnitario-((ValorUnitario*PorcentajeDescuento)/100)));

         var objIndex = Pedidos.findIndex((obj => obj.ProductoID == ProductoID));
        //Update object's goles property.
        if (objIndex >=0) {
            
            Pedidos[objIndex].Cantidad = Cantidad;
            Pedidos[objIndex].ValorUnitario = ValorUnitario;
            Pedidos[objIndex].PorcentajeDescuento = PorcentajeDescuento;
            Pedidos[objIndex].Neto = Neto;
        }
        else {
            b = { ProductoID: ProductoID,Producto:ProductoTex, ValorUnitario: ValorUnitario, Cantidad: Cantidad,PorcentajeDescuento:PorcentajeDescuento,Neto:Neto };
            Pedidos.push(b);
        }
        
        PrintTableArray();
    }

    function PrintTableArray() {
        var Total = 0;
        var Descuento = 0;

        $('#tableArray').DataTable().clear();
        $('#tableArray').DataTable().destroy();
        $('#tableArray').find('tbody').empty();
        for (var i = 0; i < Pedidos.length; i++) {
            $('#tableArray').find('tbody').append(
                `<tr id="">
                    <td align="center">${Pedidos[i].ProductoID}</td>
                    <td align="center">${Pedidos[i].Producto}</td>
                    <td align="center">${Pedidos[i].ValorUnitario}</td>
                    <td align="center">${Pedidos[i].Cantidad}</td>
                    <td align="center">${Pedidos[i].PorcentajeDescuento}</td>
                    <td align="center">${Pedidos[i].Neto}</td>
                    <td align="center">
                        <button type="button" class="btn btn-warning btn-xs" onclick="QuitarItemArray(${i})">
                            <i class="fa fa-trash"></i>&nbsp;Quitar&nbsp;&nbsp;
                        </button>
                    </td>
            </tr >`);
            Total += ((Pedidos[i].Cantidad)*(Pedidos[i].ValorUnitario-((Pedidos[i].ValorUnitario*Pedidos[i].PorcentajeDescuento)/100)));
        }
        ValorTotal = Total;
        $('#tableArray').find('tfoot').empty();
        var foot = $("#tableArray").find('tfoot');
        if (!foot.length) foot = $('<tfoot>').appendTo("#tableArray"); 
        var result = Total.toFixed(2);
        result = addCommas(result);
        foot.append($(`<tr><td colspan="6">Total<td>${result}</td></tr>`));
    }

    function QuitarItemArray(i) {
        Pedidos.splice(i,1);
        PrintTableArray();
    }
</script>